name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -e ".[test]" -c constraints.txt
    
    - name: Run tests with coverage
      run: |
        coverage run -m pytest tests/ -v --tb=short
        coverage report
        coverage xml
    
    - name: Test CLI functionality
      run: |
        python -m zestapi.cli version
        python -m zestapi.cli --help
        
    - name: Test package import and basic functionality
      run: |
        python -c "import zestapi; print(f'ZestAPI {zestapi.__version__} imported successfully')"
        python -c "from zestapi import Application; app = Application(); print('Application created successfully')"
        
    - name: Test examples
      run: |
        cd examples/basic-api && python -c "import sys; sys.path.append('.'); from main import app; print('Basic API example works')"
        cd ../ecommerce-api && python -c "import sys; sys.path.append('.'); from main import app; print('Ecommerce API example works')"
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-${{ matrix.python-version }}
        path: |
          .coverage
          coverage.xml
